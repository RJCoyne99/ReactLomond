{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{Asset}from'expo-asset';import{Platform}from'expo-modules-core';import{PitchCorrectionQuality}from\"./AV.types\";export var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS=500;export var _DEFAULT_INITIAL_PLAYBACK_STATUS={positionMillis:0,progressUpdateIntervalMillis:_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,shouldPlay:false,rate:1.0,shouldCorrectPitch:false,volume:1.0,isMuted:false,isLooping:false};export function getNativeSourceFromSource(source){var uri=null;var overridingExtension=null;var headers;if(typeof source==='string'&&Platform.OS==='web'){return{uri:source,overridingExtension:overridingExtension,headers:headers};}var asset=_getAssetFromPlaybackSource(source);if(asset!=null){uri=asset.localUri||asset.uri;}else if(source!=null&&typeof source!=='number'&&'uri'in source&&typeof source.uri==='string'){uri=source.uri;}if(uri==null){return null;}if(source!=null&&typeof source!=='number'&&'overrideFileExtensionAndroid'in source&&typeof source.overrideFileExtensionAndroid==='string'){overridingExtension=source.overrideFileExtensionAndroid;}if(source!=null&&typeof source!=='number'&&'headers'in source&&typeof source.headers==='object'){headers=source.headers;}return{uri:uri,overridingExtension:overridingExtension,headers:headers};}function _getAssetFromPlaybackSource(source){if(source==null){return null;}var asset=null;if(typeof source==='number'){asset=Asset.fromModule(source);}else if(source instanceof Asset){asset=source;}return asset;}export function assertStatusValuesInBounds(status){if(typeof status.rate==='number'&&(status.rate<0||status.rate>32)){throw new RangeError('Rate value must be between 0.0 and 32.0');}if(typeof status.volume==='number'&&(status.volume<0||status.volume>1)){throw new RangeError('Volume value must be between 0.0 and 1.0');}}export function getNativeSourceAndFullInitialStatusForLoadAsync(source,initialStatus,downloadFirst){var fullInitialStatus,asset,nativeSource;return _regeneratorRuntime.async(function getNativeSourceAndFullInitialStatusForLoadAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:fullInitialStatus=initialStatus==null?_DEFAULT_INITIAL_PLAYBACK_STATUS:_objectSpread(_objectSpread({},_DEFAULT_INITIAL_PLAYBACK_STATUS),initialStatus);assertStatusValuesInBounds(fullInitialStatus);if(!(typeof source==='string'&&Platform.OS==='web')){_context.next=4;break;}return _context.abrupt(\"return\",{nativeSource:{uri:source,overridingExtension:null},fullInitialStatus:fullInitialStatus});case 4:asset=_getAssetFromPlaybackSource(source);if(!(downloadFirst&&asset)){_context.next=8;break;}_context.next=8;return _regeneratorRuntime.awrap(asset.downloadAsync());case 8:nativeSource=getNativeSourceFromSource(source);if(!(nativeSource===null)){_context.next=11;break;}throw new Error(\"Cannot load an AV asset from a null playback source\");case 11:return _context.abrupt(\"return\",{nativeSource:nativeSource,fullInitialStatus:fullInitialStatus});case 12:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function getUnloadedStatus(){var error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return _objectSpread({isLoaded:false},error?{error:error}:null);}export var PlaybackMixin={playAsync:function playAsync(){var _this=this;return function _callee(){return _regeneratorRuntime.async(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",_this.setStatusAsync({shouldPlay:true}));case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);}();},playFromPositionAsync:function playFromPositionAsync(positionMillis){var _arguments=arguments,_this2=this;return function _callee2(){var tolerances;return _regeneratorRuntime.async(function _callee2$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:tolerances=_arguments.length>1&&_arguments[1]!==undefined?_arguments[1]:{};return _context3.abrupt(\"return\",_this2.setStatusAsync({positionMillis:positionMillis,shouldPlay:true,seekMillisToleranceAfter:tolerances.toleranceMillisAfter,seekMillisToleranceBefore:tolerances.toleranceMillisBefore}));case 2:case\"end\":return _context3.stop();}}},null,null,null,Promise);}();},pauseAsync:function pauseAsync(){var _this3=this;return function _callee3(){return _regeneratorRuntime.async(function _callee3$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",_this3.setStatusAsync({shouldPlay:false}));case 1:case\"end\":return _context4.stop();}}},null,null,null,Promise);}();},stopAsync:function stopAsync(){var _this4=this;return function _callee4(){return _regeneratorRuntime.async(function _callee4$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",_this4.setStatusAsync({positionMillis:0,shouldPlay:false}));case 1:case\"end\":return _context5.stop();}}},null,null,null,Promise);}();},setPositionAsync:function setPositionAsync(positionMillis){var _arguments2=arguments,_this5=this;return function _callee5(){var tolerances;return _regeneratorRuntime.async(function _callee5$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:tolerances=_arguments2.length>1&&_arguments2[1]!==undefined?_arguments2[1]:{};return _context6.abrupt(\"return\",_this5.setStatusAsync({positionMillis:positionMillis,seekMillisToleranceAfter:tolerances.toleranceMillisAfter,seekMillisToleranceBefore:tolerances.toleranceMillisBefore}));case 2:case\"end\":return _context6.stop();}}},null,null,null,Promise);}();},setRateAsync:function setRateAsync(rate){var _arguments3=arguments,_this6=this;return function _callee6(){var shouldCorrectPitch,pitchCorrectionQuality;return _regeneratorRuntime.async(function _callee6$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:shouldCorrectPitch=_arguments3.length>1&&_arguments3[1]!==undefined?_arguments3[1]:false;pitchCorrectionQuality=_arguments3.length>2&&_arguments3[2]!==undefined?_arguments3[2]:PitchCorrectionQuality.Low;return _context7.abrupt(\"return\",_this6.setStatusAsync({rate:rate,shouldCorrectPitch:shouldCorrectPitch,pitchCorrectionQuality:pitchCorrectionQuality}));case 3:case\"end\":return _context7.stop();}}},null,null,null,Promise);}();},setVolumeAsync:function setVolumeAsync(volume){var _this7=this;return function _callee7(){return _regeneratorRuntime.async(function _callee7$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:return _context8.abrupt(\"return\",_this7.setStatusAsync({volume:volume}));case 1:case\"end\":return _context8.stop();}}},null,null,null,Promise);}();},setIsMutedAsync:function setIsMutedAsync(isMuted){var _this8=this;return function _callee8(){return _regeneratorRuntime.async(function _callee8$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt(\"return\",_this8.setStatusAsync({isMuted:isMuted}));case 1:case\"end\":return _context9.stop();}}},null,null,null,Promise);}();},setIsLoopingAsync:function setIsLoopingAsync(isLooping){var _this9=this;return function _callee9(){return _regeneratorRuntime.async(function _callee9$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:return _context10.abrupt(\"return\",_this9.setStatusAsync({isLooping:isLooping}));case 1:case\"end\":return _context10.stop();}}},null,null,null,Promise);}();},setProgressUpdateIntervalAsync:function setProgressUpdateIntervalAsync(progressUpdateIntervalMillis){var _this10=this;return function _callee10(){return _regeneratorRuntime.async(function _callee10$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:return _context11.abrupt(\"return\",_this10.setStatusAsync({progressUpdateIntervalMillis:progressUpdateIntervalMillis}));case 1:case\"end\":return _context11.stop();}}},null,null,null,Promise);}();}};export*from\"./AV.types\";","map":{"version":3,"sources":["../src/AV.ts"],"names":[],"mappings":"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","sourcesContent":["import { Asset } from 'expo-asset';\nimport { Platform } from 'expo-modules-core';\n\nimport {\n  AVPlaybackSource,\n  AVPlaybackNativeSource,\n  AVPlaybackStatus,\n  AVPlaybackStatusToSet,\n  PitchCorrectionQuality,\n} from './AV.types';\n\n// TODO add:\n//  disableFocusOnAndroid\n//  audio routes (at least did become noisy on android)\n//  pan\n//  pitch\n//  API to explicitly request audio focus / session\n//  API to select stream type on Android\n//  subtitles API\n\nexport const _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS: number = 500;\nexport const _DEFAULT_INITIAL_PLAYBACK_STATUS: AVPlaybackStatusToSet = {\n  positionMillis: 0,\n  progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false,\n};\n\nexport function getNativeSourceFromSource(\n  source?: AVPlaybackSource | null\n): AVPlaybackNativeSource | null {\n  let uri: string | null = null;\n  let overridingExtension: string | null = null;\n  let headers: { [fieldName: string]: string } | undefined;\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      uri: source,\n      overridingExtension,\n      headers,\n    };\n  }\n\n  const asset: Asset | null = _getAssetFromPlaybackSource(source);\n  if (asset != null) {\n    uri = asset.localUri || asset.uri;\n  } else if (\n    source != null &&\n    typeof source !== 'number' &&\n    'uri' in source &&\n    typeof source.uri === 'string'\n  ) {\n    uri = source.uri;\n  }\n\n  if (uri == null) {\n    return null;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'overrideFileExtensionAndroid' in source &&\n    typeof source.overrideFileExtensionAndroid === 'string'\n  ) {\n    overridingExtension = source.overrideFileExtensionAndroid;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'headers' in source &&\n    typeof source.headers === 'object'\n  ) {\n    headers = source.headers;\n  }\n  return { uri, overridingExtension, headers };\n}\n\nfunction _getAssetFromPlaybackSource(source?: AVPlaybackSource | null): Asset | null {\n  if (source == null) {\n    return null;\n  }\n\n  let asset: Asset | null = null;\n  if (typeof source === 'number') {\n    asset = Asset.fromModule(source);\n  } else if (source instanceof Asset) {\n    asset = source;\n  }\n  return asset;\n}\n\nexport function assertStatusValuesInBounds(status: AVPlaybackStatusToSet): void {\n  if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n    throw new RangeError('Rate value must be between 0.0 and 32.0');\n  }\n  if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n    throw new RangeError('Volume value must be between 0.0 and 1.0');\n  }\n}\n\nexport async function getNativeSourceAndFullInitialStatusForLoadAsync(\n  source: AVPlaybackSource | null,\n  initialStatus: AVPlaybackStatusToSet | null,\n  downloadFirst: boolean\n): Promise<{\n  nativeSource: AVPlaybackNativeSource;\n  fullInitialStatus: AVPlaybackStatusToSet;\n}> {\n  // Get the full initial status\n  const fullInitialStatus: AVPlaybackStatusToSet =\n    initialStatus == null\n      ? _DEFAULT_INITIAL_PLAYBACK_STATUS\n      : {\n          ..._DEFAULT_INITIAL_PLAYBACK_STATUS,\n          ...initialStatus,\n        };\n  assertStatusValuesInBounds(fullInitialStatus);\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      nativeSource: {\n        uri: source,\n        overridingExtension: null,\n      },\n      fullInitialStatus,\n    };\n  }\n\n  // Download first if necessary.\n  const asset = _getAssetFromPlaybackSource(source);\n  if (downloadFirst && asset) {\n    // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n    await asset.downloadAsync();\n  }\n\n  // Get the native source\n  const nativeSource: AVPlaybackNativeSource | null = getNativeSourceFromSource(source);\n\n  if (nativeSource === null) {\n    throw new Error(`Cannot load an AV asset from a null playback source`);\n  }\n\n  return { nativeSource, fullInitialStatus };\n}\n\nexport function getUnloadedStatus(error: string | null = null): AVPlaybackStatus {\n  return {\n    isLoaded: false,\n    ...(error ? { error } : null),\n  };\n}\n\nexport interface AV {\n  setStatusAsync(status: AVPlaybackStatusToSet): Promise<AVPlaybackStatus>;\n  getStatusAsync(): Promise<AVPlaybackStatus>;\n}\n\nexport interface Playback extends AV {\n  playAsync(): Promise<AVPlaybackStatus>;\n  loadAsync(\n    source: AVPlaybackSource,\n    initialStatus: AVPlaybackStatusToSet,\n    downloadAsync: boolean\n  ): Promise<AVPlaybackStatus>;\n  unloadAsync(): Promise<AVPlaybackStatus>;\n  playFromPositionAsync(\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ): Promise<AVPlaybackStatus>;\n  pauseAsync(): Promise<AVPlaybackStatus>;\n  stopAsync(): Promise<AVPlaybackStatus>;\n  replayAsync(status: AVPlaybackStatusToSet): Promise<AVPlaybackStatus>;\n  setPositionAsync(\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ): Promise<AVPlaybackStatus>;\n  setRateAsync(\n    rate: number,\n    shouldCorrectPitch: boolean,\n    pitchCorrectionQuality?: PitchCorrectionQuality\n  ): Promise<AVPlaybackStatus>;\n  setVolumeAsync(volume: number): Promise<AVPlaybackStatus>;\n  setIsMutedAsync(isMuted: boolean): Promise<AVPlaybackStatus>;\n  setIsLoopingAsync(isLooping: boolean): Promise<AVPlaybackStatus>;\n  setProgressUpdateIntervalAsync(progressUpdateIntervalMillis: number): Promise<AVPlaybackStatus>;\n}\n\n/**\n * A mixin that defines common playback methods for A/V classes so they implement the `Playback`\n * interface\n */\nexport const PlaybackMixin = {\n  async playAsync(): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ shouldPlay: true });\n  },\n\n  async playFromPositionAsync(\n    positionMillis: number,\n    tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n  ): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({\n      positionMillis,\n      shouldPlay: true,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async pauseAsync(): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ shouldPlay: false });\n  },\n\n  async stopAsync(): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ positionMillis: 0, shouldPlay: false });\n  },\n\n  async setPositionAsync(\n    positionMillis: number,\n    tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n  ): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({\n      positionMillis,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async setRateAsync(\n    rate: number,\n    shouldCorrectPitch: boolean = false,\n    pitchCorrectionQuality: PitchCorrectionQuality = PitchCorrectionQuality.Low\n  ): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({\n      rate,\n      shouldCorrectPitch,\n      pitchCorrectionQuality,\n    });\n  },\n\n  async setVolumeAsync(volume: number): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ volume });\n  },\n\n  async setIsMutedAsync(isMuted: boolean): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ isMuted });\n  },\n\n  async setIsLoopingAsync(isLooping: boolean): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ isLooping });\n  },\n\n  async setProgressUpdateIntervalAsync(\n    progressUpdateIntervalMillis: number\n  ): Promise<AVPlaybackStatus> {\n    return (this as any as Playback).setStatusAsync({ progressUpdateIntervalMillis });\n  },\n};\n\nexport * from './AV.types';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
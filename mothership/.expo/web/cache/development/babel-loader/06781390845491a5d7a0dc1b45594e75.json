{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Constants from 'expo-constants';\nimport S from \"../constants/c1--Styles\";\nimport C from \"../constants/c2--Colours\";\nimport O from \"../constants/c3--Objects\";\nimport T from \"../constants/c4--Text\";\nimport L from \"../constants/c5--Links\";\nimport A from \"../constants/c6--Actions\";\nimport N from \"../constants/c7--Navigation\";\nimport D from \"../constants/c8--Data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction login(username, password, props) {\n  var Username = username;\n  var Password = password;\n\n  if (Username.length == 0 || Password.length == 0) {\n    alert(\"Required Field Is Missing!!!\");\n  } else {\n    var APIURL = L.LOGIN_URL;\n    var headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    var Data = {\n      Username: Username,\n      Password: Password\n    };\n    fetch(APIURL, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(Data)\n    }).then(function (Response) {\n      return Response.json();\n    }).then(function (Response) {\n      if (Response[0].Message == \"Success\") {\n        props.response(Response);\n        props.authenticated(true);\n        props.userInfo(Data);\n      } else {\n        alert(Response[0].Message);\n      }\n    }).catch(function (error) {\n      console.error(\"ERROR FOUND\" + error);\n    });\n  }\n}\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        style: S.flexDark,\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.header,\n            children: \" \"\n          }), _jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              style: styles.loginText,\n              children: \"LOGIN\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"Username\",\n              onChangeText: function onChangeText(text) {\n                return _this2.setState({\n                  username: text\n                });\n              },\n              value: this.state.Username\n            }), _jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"Password\",\n              onChangeText: function onChangeText(text) {\n                return _this2.setState({\n                  password: text\n                });\n              },\n              value: this.state.password\n            }), _jsx(TouchableOpacity, {\n              style: styles.button,\n              onPress: function onPress() {\n                login(_this2.state.username, _this2.state.password, _this2.props);\n              },\n              children: _jsx(Text, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: \"Submit\"\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: Constants.statusBarHeight,\n    padding: 0\n  },\n  loginText: {\n    fontSize: 30,\n    color: C.lomondBlue,\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  header: {\n    backgroundColor: C.dark,\n    width: '100%',\n    textAlign: 'center',\n    padding: 16,\n    margin: 0,\n    fontSize: 24,\n    fontWeight: '900',\n    color: 'white',\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  inputContainer: {\n    width: '60%',\n    padding: 26,\n    marginTop: 32,\n    backgroundColor: C.white,\n    borderRadius: 8\n  },\n  input: {\n    width: '100%',\n    fontSize: 16,\n    borderColor: C.lightBlue,\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16\n  },\n  button: {\n    width: '100%',\n    backgroundColor: C.lightBlue,\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 16\n  }\n});","map":{"version":3,"sources":["/Users/joshuafarmer-macbook_pro/IOPEWQ-Synced/WebStudioScotland/Development/WebStudioScotland/Lomond-2022/mothership/src/screens/Login.js"],"names":["React","Constants","S","C","O","T","L","A","N","D","login","username","password","props","Username","Password","length","alert","APIURL","LOGIN_URL","headers","Data","fetch","method","body","JSON","stringify","then","Response","json","Message","response","authenticated","userInfo","catch","error","console","Login","state","flexDark","styles","container","header","inputContainer","loginText","input","text","setState","button","textAlign","Component","StyleSheet","create","width","height","justifyContent","alignItems","paddingTop","statusBarHeight","padding","fontSize","color","lomondBlue","marginBottom","backgroundColor","dark","margin","fontWeight","position","top","left","marginTop","white","borderRadius","borderColor","lightBlue","borderWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, KeyboardAvoidingView, StyleSheet, TouchableOpacity, TextInput} from 'react-native';\nimport Constants from 'expo-constants';\nimport S from '../constants/c1--Styles';\nimport C from '../constants/c2--Colours';\nimport O from '../constants/c3--Objects';\nimport T from '../constants/c4--Text';\nimport L from '../constants/c5--Links';\nimport A from '../constants/c6--Actions';\nimport N from '../constants/c7--Navigation';\nimport D from '../constants/c8--Data';\n\n\n// create a function for when login button is pressed that connects to mysql database to check if username and password are correct. if correct, then go to main page. if incorrect, then stay on login page\n\n  function login(username, password, props) {\n    var Username = username;\n    var Password = password;\n\n    if ((Username.length==0) || (Password.length==0)){\n      alert(\"Required Field Is Missing!!!\");\n    }else{\n      var APIURL = L.LOGIN_URL;\n\n      var headers = {\n        'Accept' : 'application/json',\n        'Content-Type' : 'application/json'\n      };\n            \n      var Data ={\n        Username: Username,\n        Password: Password\n      };\n\n      fetch(APIURL,{\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(Data)\n      })\n      .then((Response)=>Response.json())\n      .then((Response)=>{\n        // alert(Response)\n        \n        if (Response[0].Message == \"Success\") {\n          // console.log(Response[0].FullName)\n          props.response(Response);\n          props.authenticated(true);\n          props.userInfo(Data);\n        }\n        else{\n          alert(Response[0].Message)\n        }\n        // console.log(Data);\n      })\n      .catch((error)=>{\n        console.error(\"ERROR FOUND\" + error);\n      })\n    }\n  }\n\n\n\n\nexport default class Login extends React.Component {\n//pageChange prop from App.js\n  state = {\n    username: '',\n    password: '',\n  }\n\n  render() {\n\n    return (\n      <KeyboardAvoidingView behavior={\"padding\"} style={S.flexDark}>\n        <View style={styles.container}>\n          <Text style={styles.header}> </Text>\n          <View style={styles.inputContainer}>\n            <Text style={styles.loginText}>LOGIN</Text>\n            <TextInput style={styles.input}\n              placeholder=\"Username\"\n              onChangeText={(text) => this.setState({username: text})}\n              value={this.state.Username}\n            />\n            <TextInput style={styles.input}\n              placeholder=\"Password\"\n              onChangeText={(text) => this.setState({password: text})}\n              value={this.state.password}\n            />\n          <TouchableOpacity style={styles.button} onPress={() => {login(this.state.username, this.state.password, this.props)}}>\n            <Text style={{textAlign: 'center'}}>\n              Submit\n            </Text>\n          </TouchableOpacity>\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  \n\n  container: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: Constants.statusBarHeight,\n    padding: 0,\n  },\n  loginText: {\n    fontSize: 30,\n    color: C.lomondBlue,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n\n  header: {\n    backgroundColor: C.dark,\n    width: '100%',\n    textAlign: 'center',\n    padding: 16,\n    margin: 0,\n    fontSize: 24,\n    fontWeight: '900',\n    color: 'white',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  inputContainer: {\n    width: '60%',\n    padding: 26,\n    marginTop: 32,\n    backgroundColor: C.white,\n    borderRadius: 8,\n  },\n  input: {\n    width: '100%',\n    // height: 40,\n    fontSize: 16,\n    borderColor:  C.lightBlue,\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  button: {\n    width: '100%',\n    backgroundColor:  C.lightBlue,\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 16,\n  },\n  \n});\n"]},"metadata":{},"sourceType":"module"}
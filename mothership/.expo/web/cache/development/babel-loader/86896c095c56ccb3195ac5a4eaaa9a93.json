{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Constants from 'expo-constants';\nimport S from \"../constants/c1--Styles\";\nimport C from \"../constants/c2--Colours\";\nimport O from \"../constants/c3--Objects\";\nimport T from \"../constants/c4--Text\";\nimport L from \"../constants/c5--Links\";\nimport A from \"../constants/c6--Actions\";\nimport N from \"../constants/c7--Navigation\";\nimport D from \"../constants/c8--Data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Leads(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  var APIURL = L.CRM_URL;\n  var headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  var Data = {\n    repName: 'DC Dwayne'\n  };\n  useEffect(function () {\n    fetch(APIURL, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(Data)\n    }).then(function (Response) {\n      return Response.json();\n    }).then(function (Response) {\n      Response = Response.filter(function (item) {\n        return item.name_value_list.rep_name_c.value == 'Chris';\n      }).map(function (_ref) {\n        var id = _ref.id,\n            name_value_list = _ref.name_value_list;\n        return {\n          id: id,\n          name_value_list: name_value_list\n        };\n      });\n      setData(Response);\n      console.log(Response);\n    }).catch(function (error) {\n      console.error(\"ERROR FOUND\" + error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  var testData = {\n    id: '1',\n    name_value_list: {\n      rep_name_c: {\n        value: 'Chris'\n      },\n      name: {\n        value: 'Name Test'\n      },\n      phone_home: {\n        value: 'Name Test'\n      },\n      primary_address_street: {\n        value: 'Address Test'\n      },\n      primary_address_postalcode: {\n        value: 'Post Code Test'\n      },\n      appointmenttime_c: {\n        value: 'Appointment Time Test'\n      }\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    children: [_jsx(Text, {\n      style: [S.headerText, {\n        paddingBottom: 30\n      }],\n      children: \" LEADS \"\n    }), isLoading ? _jsx(Text, {\n      children: \"Loading...\"\n    }) : _jsxs(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n      },\n      children: [_jsx(View, {\n        style: S.listItem,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            props.lead(testData);\n            console.log(testData);\n            props.pageChange(props.product);\n          },\n          children: _jsx(Text, {\n            children: 'ID: ' + testData.id + '\\n  Data: ' + testData.name_value_list + '\\n '\n          })\n        })\n      }), _jsx(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref2, index) {\n          var id = _ref2.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(View, {\n            style: S.listItem,\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                props.lead(item);\n                console.log(props.product);\n                console.log(props.product);\n                props.pageChange(props.product);\n              },\n              children: _jsx(Text, {\n                children: 'ID: ' + item.id + '\\n  Rep Name: ' + item.name_value_list.rep_name_c.value + '\\n  Name: ' + item.name_value_list.name.value + '\\n  Phone: ' + item.name_value_list.phone_home.value + '\\n  Address: ' + item.name_value_list.primary_address_street.value + '\\n  Post Code: ' + item.name_value_list.primary_address_postalcode.value + '\\n  Appointment Time: ' + item.name_value_list.appointmenttime_c.value + '\\n '\n              })\n            })\n          });\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/joshuafarmer-macbook_pro/IOPEWQ-Synced/WebStudioScotland/Development/WebStudioScotland/Lomond-2022/mothership/src/screens/Leads.js"],"names":["React","useEffect","useState","Constants","S","C","O","T","L","A","N","D","Leads","props","isLoading","setLoading","data","setData","APIURL","CRM_URL","headers","Data","repName","fetch","method","body","JSON","stringify","then","Response","json","filter","item","name_value_list","rep_name_c","value","map","id","console","log","catch","error","finally","testData","name","phone_home","primary_address_street","primary_address_postalcode","appointmenttime_c","flex","padding","headerText","paddingBottom","flexDirection","justifyContent","listItem","lead","pageChange","product","index","styles","StyleSheet","create","container","paddingTop","statusBarHeight","backgroundColor","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Text, View, StyleSheet, TouchableOpacity, FlatList } from 'react-native';\r\nimport Constants from 'expo-constants';\r\n\r\nimport S from '../constants/c1--Styles';\r\nimport C from '../constants/c2--Colours';\r\nimport O from '../constants/c3--Objects';\r\nimport T from '../constants/c4--Text';\r\nimport L from '../constants/c5--Links';\r\nimport A from '../constants/c6--Actions';\r\nimport N from '../constants/c7--Navigation';\r\nimport D from '../constants/c8--Data';\r\n\r\nexport default function Leads(props){\r\n\r\n  const [isLoading, setLoading] = React.useState(true);\r\n    const [data, setData] = React.useState([]);\r\n    \r\n    var APIURL = L.CRM_URL;\r\n    var headers = {\r\n      'Accept' : 'application/json',\r\n      'Content-Type' : 'application/json'\r\n    };    \r\n    var Data ={\r\n      // repName: repName\r\n      repName: 'DC Dwayne'\r\n    };\r\n    \r\n      useEffect(() => {\r\n        fetch(APIURL,{\r\n          method: 'POST',\r\n          headers: headers,\r\n          body: JSON.stringify(Data)\r\n        })\r\n        .then((Response)=>Response.json())\r\n        .then((Response)=>{\r\n          \r\n          // setData(Response);\r\n\r\n          Response = Response.filter(function(item){\r\n            return item.name_value_list.rep_name_c.value == 'Chris';\r\n         }).map(function({id, name_value_list}){\r\n           return {id, name_value_list};\r\n          });\r\n         setData(Response);\r\n         console.log(Response);\r\n\r\n          // console.log(data);\r\n          // return Response;\r\n              // alert(Response);ß\r\n              // console.log(Response);\r\n                // Response.map((item, index) => {\r\n                // console.log(item);})\r\n        })\r\n        .catch((error)=>{\r\n          console.error(\"ERROR FOUND\" + error);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    \r\n      }, [])\r\n\r\n    \r\nlet testData = {\r\n    id: '1',\r\n    name_value_list: {\r\n      rep_name_c:{value: 'Chris'}, \r\n      name:{value: 'Name Test'}, \r\n      phone_home:{value: 'Name Test'}, \r\n      primary_address_street:{value: 'Address Test'}, \r\n      primary_address_postalcode:{value: 'Post Code Test'}, \r\n      appointmenttime_c:{value: 'Appointment Time Test'}, \r\n    },\r\n  };\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n      <View style={{ flex: 1, padding: 24 }}>\r\n\r\n          <Text style={[S.headerText,{paddingBottom: 30}]}> LEADS </Text>\r\n  {/* TODO FIX LOADING STYLES */}\r\n      {isLoading ? <Text>Loading...</Text> : \r\n      ( <View style={{ flex: 1, flexDirection: 'column', justifyContent:  'space-between'}}>\r\n          {/* <Text style={{ fontSize: 18, color: 'green', textAlign: 'center'}}>{data.title}</Text>\r\n          <Text style={{ fontSize: 14, color: 'green', textAlign: 'center', paddingBottom: 10}}>Leads:</Text> */}\r\n          <View style={S.listItem}>\r\n              <TouchableOpacity onPress={() => {\r\n                props.lead(testData); \r\n                console.log(testData);\r\n                // console.log(props.product)\r\n                // console.log(props.product)\r\n              props.pageChange(props.product)}} >\r\n                <Text>{'ID: ' + testData.id + '\\n  Data: ' + testData.name_value_list + '\\n '}</Text>\r\n              </TouchableOpacity>\r\n              </View>\r\n          <FlatList\r\n            data={data}\r\n            keyExtractor={({ id }, index) => id}\r\n            renderItem={({ item }) => (\r\n              <View style={S.listItem}>\r\n              <TouchableOpacity onPress={() => {\r\n                props.lead(item); \r\n                console.log(props.product)\r\n                console.log(props.product)\r\n              props.pageChange(props.product)}} >\r\n                <Text>{'ID: ' + item.id + '\\n  Rep Name: ' + item.name_value_list.rep_name_c.value  + '\\n  Name: ' + item.name_value_list.name.value  + '\\n  Phone: ' + item.name_value_list.phone_home.value + '\\n  Address: ' + item.name_value_list.primary_address_street.value + '\\n  Post Code: ' + item.name_value_list.primary_address_postalcode.value + '\\n  Appointment Time: ' + item.name_value_list.appointmenttime_c.value + '\\n '}</Text>\r\n              </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n    );\r\n  }\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#ecf0f1',\r\n    padding: 8,\r\n    width: '100%'\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
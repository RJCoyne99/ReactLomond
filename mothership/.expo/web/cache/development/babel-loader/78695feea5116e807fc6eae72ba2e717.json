{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Constants from \"expo-constants\";\nimport S from \"../constants/c1--Styles\";\nimport C from \"../constants/c2--Colours\";\nimport O from \"../constants/c3--Objects\";\nimport T from \"../constants/c4--Text\";\nimport L from \"../constants/c5--Links\";\nimport A from \"../constants/c6--Actions\";\nimport N from \"../constants/c7--Navigation\";\nimport D from \"../constants/c8--Data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Leads(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  var APIURL = L.CRM_URL;\n  var headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n  var Data = {\n    repName: \"DC Dwayne\"\n  };\n  useEffect(function () {\n    fetch(APIURL, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(Data)\n    }).then(function (Response) {\n      return Response.json();\n    }).then(function (Response) {\n      Response = Response.filter(function (item) {\n        return item.name_value_list.rep_name_c.value == props.userName;\n      }).map(function (_ref) {\n        var id = _ref.id,\n            name_value_list = _ref.name_value_list;\n        return {\n          id: id,\n          name_value_list: name_value_list\n        };\n      });\n      setData(Response);\n      console.log(Response);\n    }).catch(function (error) {\n      console.error(\"ERROR FOUND\" + error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  var testData = [{\n    id: \"1\",\n    name_value_list: {\n      rep_name_c: {\n        name: \"rep_name_c\",\n        value: props.userName\n      },\n      name: {\n        name: \"name\",\n        value: \"Name Test\"\n      },\n      phone_home: {\n        name: \"phone_home\",\n        value: \"Name Test\"\n      },\n      primary_address_street: {\n        name: \"primary_address_street\",\n        value: \"Address Test\"\n      },\n      primary_address_postalcode: {\n        name: \"primary_address_postalcode\",\n        value: \"Post Code Test\"\n      },\n      appointmenttime_c: {\n        name: \"appointmenttime_c\",\n        value: \"Appointment Time Test\"\n      }\n    }\n  }];\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    children: [_jsx(Text, {\n      style: [S.headerText, {\n        paddingBottom: 30\n      }],\n      children: \" LEADS \"\n    }), _jsx(Text, {\n      style: [S.headerText, {\n        paddingBottom: 30,\n        fontSize: 18\n      }],\n      children: props.userName\n    }), isLoading ? _jsx(Text, {\n      children: \"Loading...\"\n    }) : _jsxs(View, {\n      style: {\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(FlatList, {\n        data: testData,\n        keyExtractor: function keyExtractor(_ref2, index) {\n          var id = _ref2.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(View, {\n            style: S.listItem,\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                props.lead(item);\n                console.log(props.product);\n                console.log(props.product);\n                props.pageChange(2);\n              },\n              children: _jsx(Text, {\n                children: \"ID: \" + item.id + \"\\n  Rep Name: \" + item.name_value_list.rep_name_c.value + \"\\n  Name: \" + item.name_value_list.name.value + \"\\n  Phone: \" + item.name_value_list.phone_home.value + \"\\n  Address: \" + item.name_value_list.primary_address_street.value + \"\\n  Post Code: \" + item.name_value_list.primary_address_postalcode.value + \"\\n  Appointment Time: \" + item.name_value_list.appointmenttime_c.value + \"\\n \"\n              })\n            })\n          });\n        }\n      }), _jsx(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref4, index) {\n          var id = _ref4.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref5) {\n          var item = _ref5.item;\n          return _jsx(View, {\n            style: S.listItem,\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                props.lead(item);\n                console.log(props.product);\n                console.log(props.product);\n                props.pageChange(22);\n              },\n              children: _jsx(Text, {\n                children: \"ID: \" + item.id + \"\\n  Rep Name: \" + item.name_value_list.rep_name_c.value + \"\\n  Name: \" + item.name_value_list.name.value + \"\\n  Phone: \" + item.name_value_list.phone_home.value + \"\\n  Address: \" + item.name_value_list.primary_address_street.value + \"\\n  Post Code: \" + item.name_value_list.primary_address_postalcode.value + \"\\n  Appointment Time: \" + item.name_value_list.appointmenttime_c.value + \"\\n \"\n              })\n            })\n          });\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: \"#ecf0f1\",\n    padding: 8,\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/joshuafarmer-macbook_pro/IOPEWQ-Synced/WebStudioScotland/Development/WebStudioScotland/Lomond-2022/mothership/src/screens/LeadsTwo.js"],"names":["React","useEffect","useState","Constants","S","C","O","T","L","A","N","D","Leads","props","isLoading","setLoading","data","setData","APIURL","CRM_URL","headers","Accept","Data","repName","fetch","method","body","JSON","stringify","then","Response","json","filter","item","name_value_list","rep_name_c","value","userName","map","id","console","log","catch","error","finally","testData","name","phone_home","primary_address_street","primary_address_postalcode","appointmenttime_c","flex","padding","headerText","paddingBottom","fontSize","flexDirection","justifyContent","index","listItem","lead","product","pageChange","styles","StyleSheet","create","container","paddingTop","statusBarHeight","backgroundColor","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\n\r\nimport S from \"../constants/c1--Styles\";\r\nimport C from \"../constants/c2--Colours\";\r\nimport O from \"../constants/c3--Objects\";\r\nimport T from \"../constants/c4--Text\";\r\nimport L from \"../constants/c5--Links\";\r\nimport A from \"../constants/c6--Actions\";\r\nimport N from \"../constants/c7--Navigation\";\r\nimport D from \"../constants/c8--Data\";\r\n\r\nexport default function Leads(props) {\r\n  const [isLoading, setLoading] = React.useState(true);\r\n  const [data, setData] = React.useState([]);\r\n\r\n  var APIURL = L.CRM_URL;\r\n  var headers = {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n  var Data = {\r\n    // repName: repName\r\n    repName: \"DC Dwayne\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(APIURL, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(Data),\r\n    })\r\n      .then((Response) => Response.json())\r\n      .then((Response) => {\r\n        // setData(Response);\r\n\r\n        Response = Response.filter(function (item) {\r\n          // return item.name_value_list.rep_name_c.value == \"Chris\";\r\n          return item.name_value_list.rep_name_c.value == props.userName;\r\n        }).map(function ({ id, name_value_list }) {\r\n          return { id, name_value_list };\r\n        });\r\n        setData(Response);\r\n        console.log(Response);\r\n\r\n        // console.log(data);\r\n        // return Response;\r\n        // alert(Response);ß\r\n        // console.log(Response);\r\n        // Response.map((item, index) => {\r\n        // console.log(item);})\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"ERROR FOUND\" + error);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  let testData = [\r\n    {\r\n      id: \"1\",\r\n      name_value_list: {\r\n        rep_name_c: { name: \"rep_name_c\", value: props.userName },\r\n        name: { name: \"name\", value: \"Name Test\" },\r\n        phone_home: { name: \"phone_home\", value: \"Name Test\" },\r\n        primary_address_street: {\r\n          name: \"primary_address_street\",\r\n          value: \"Address Test\",\r\n        },\r\n        primary_address_postalcode: {\r\n          name: \"primary_address_postalcode\",\r\n          value: \"Post Code Test\",\r\n        },\r\n        appointmenttime_c: {\r\n          name: \"appointmenttime_c\",\r\n          value: \"Appointment Time Test\",\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 24 }}>\r\n      <Text style={[S.headerText, { paddingBottom: 30 }]}> LEADS </Text>\r\n      <Text style={[S.headerText, { paddingBottom: 30, fontSize: 18 }]}>\r\n        {props.userName}\r\n      </Text>\r\n      {/* TODO FIX LOADING STYLES */}\r\n      {isLoading ? (\r\n        <Text>Loading...</Text>\r\n      ) : (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          {/* <Text style={{ fontSize: 18, color: 'green', textAlign: 'center'}}>{data.title}</Text>\r\n          <Text style={{ fontSize: 14, color: 'green', textAlign: 'center', paddingBottom: 10}}>Leads:</Text> */}\r\n          <FlatList\r\n            data={testData}\r\n            keyExtractor={({ id }, index) => id}\r\n            renderItem={({ item }) => (\r\n              <View style={S.listItem}>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    props.lead(item);\r\n                    console.log(props.product);\r\n                    console.log(props.product);\r\n                    props.pageChange(2);\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {\"ID: \" +\r\n                      item.id +\r\n                      \"\\n  Rep Name: \" +\r\n                      item.name_value_list.rep_name_c.value +\r\n                      \"\\n  Name: \" +\r\n                      item.name_value_list.name.value +\r\n                      \"\\n  Phone: \" +\r\n                      item.name_value_list.phone_home.value +\r\n                      \"\\n  Address: \" +\r\n                      item.name_value_list.primary_address_street.value +\r\n                      \"\\n  Post Code: \" +\r\n                      item.name_value_list.primary_address_postalcode.value +\r\n                      \"\\n  Appointment Time: \" +\r\n                      item.name_value_list.appointmenttime_c.value +\r\n                      \"\\n \"}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          />\r\n          <FlatList\r\n            data={data}\r\n            keyExtractor={({ id }, index) => id}\r\n            renderItem={({ item }) => (\r\n              <View style={S.listItem}>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    props.lead(item);\r\n                    console.log(props.product);\r\n                    console.log(props.product);\r\n                    props.pageChange(22);\r\n                  }}\r\n                >\r\n                  <Text>\r\n                    {\"ID: \" +\r\n                      item.id +\r\n                      \"\\n  Rep Name: \" +\r\n                      item.name_value_list.rep_name_c.value +\r\n                      \"\\n  Name: \" +\r\n                      item.name_value_list.name.value +\r\n                      \"\\n  Phone: \" +\r\n                      item.name_value_list.phone_home.value +\r\n                      \"\\n  Address: \" +\r\n                      item.name_value_list.primary_address_street.value +\r\n                      \"\\n  Post Code: \" +\r\n                      item.name_value_list.primary_address_postalcode.value +\r\n                      \"\\n  Appointment Time: \" +\r\n                      item.name_value_list.appointmenttime_c.value +\r\n                      \"\\n \"}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: \"#ecf0f1\",\r\n    padding: 8,\r\n    width: \"100%\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
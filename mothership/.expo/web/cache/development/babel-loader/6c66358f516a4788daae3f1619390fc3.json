{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, Component } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Checkbox from 'expo-checkbox';\nimport Lightbox from 'react-native-lightbox';\nimport Carousel from 'react-native-looped-carousel';\nimport TimeLineBox from \"../../components/TimelineBox\";\nimport S from \"../../constants/c1--Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nvar BASE_PADDING = 10;\nexport default function SamplePage() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isChecked = _useState2[0],\n      setChecked = _useState2[1];\n\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: S.borderButton,\n      children: _jsxs(View, {\n        style: S.row,\n        children: [_jsx(Checkbox, {\n          style: S.checkbox,\n          value: isChecked,\n          onValueChange: setChecked,\n          color: isChecked ? '#4630EB' : undefined\n        }), _jsx(Text, {\n          style: S.paragraph,\n          children: \"Custom colored checkbox\"\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: BASE_PADDING\n  }\n});","map":{"version":3,"sources":["/Users/joshuafarmer-macbook_pro/IOPEWQ-Synced/WebStudioScotland/Development/WebStudioScotland/Lomond-2022/mothership/src/screens/Roof/lightbox.js"],"names":["React","useState","Component","Checkbox","Lightbox","Carousel","TimeLineBox","S","WINDOW_WIDTH","Dimensions","get","width","BASE_PADDING","SamplePage","isChecked","setChecked","styles","container","borderButton","row","checkbox","undefined","paragraph","StyleSheet","create","paddingHorizontal"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;;AAaA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,WAAP;AACA,OAAOC,CAAP;;;AAEA,IAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA9C;AACA,IAAMC,YAAY,GAAG,EAArB;AAMA,eAAe,SAASC,UAAT,GAAsB;AAEnC,kBAAgCZ,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAkBC,UAAlB;;AAGA,SAEA,KAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA1B;AAAA,cAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,CAAC,CAACW,YAAf;AAAA,gBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,CAAC,CAACY,GAAf;AAAA,mBACA,KAAC,QAAD;AACE,UAAA,KAAK,EAAEZ,CAAC,CAACa,QADX;AAEE,UAAA,KAAK,EAAEN,SAFT;AAGE,UAAA,aAAa,EAAEC,UAHjB;AAIE,UAAA,KAAK,EAAED,SAAS,GAAG,SAAH,GAAeO;AAJjC,UADA,EAOA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,CAAC,CAACe,SAAf;AAAA;AAAA,UAPA;AAAA;AADF;AAFJ,IAFA;AA+BD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,iBAAiB,EAAEb;AADV;AADoB,CAAlB,CAAf","sourcesContent":["\n   \nimport React, { useState, Component } from 'react';\nimport {\n  AppRegistry,\n  Dimensions,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Alert,\n} from 'react-native';\n\nimport Checkbox from 'expo-checkbox';\n \nimport Lightbox from 'react-native-lightbox';\nimport Carousel from 'react-native-looped-carousel';\nimport TimeLineBox from '../../components/TimelineBox';\nimport S from '../../constants/c1--Styles';\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\nconst BASE_PADDING = 10;\n\n// create const state for checkbox\n\n\n\nexport default function SamplePage() {\n  \n  const [isChecked, setChecked] = useState(false);\n\n\n  return(\n\n  <ScrollView style={styles.container}>\n\n      <View style={S.borderButton}>\n        <View style={S.row}>\n        <Checkbox\n          style={S.checkbox}\n          value={isChecked}\n          onValueChange={setChecked}\n          color={isChecked ? '#4630EB' : undefined}\n        />\n        <Text style={S.paragraph}>Custom colored checkbox</Text>\n        </View>\n      </View>\n\n\n\n{/* \n<TimeLineBox style={styles.timeLineBox} title={'TESTING'}></TimeLineBox>\n<TimeLineBox style={styles.timeLineBox} title={'TESTING2'}></TimeLineBox>\n<TimeLineBox style={styles.timeLineBox} title={'TESTING3'}></TimeLineBox>\n\n */}\n\n\n\n\n\n  </ScrollView>\n)\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: BASE_PADDING,\n  },\n\n});"]},"metadata":{},"sourceType":"module"}